<?xml version="1.0" encoding="UTF-8"?>

<!-- FrameworkAnzeige.wxs
     Hier soll angezeigt werden, ob auf dem Zielrechner die Frameworks
     ".NET Framework 4.8" und ".NET Core 3.1" vorhanden sind.
-->

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

  <Fragment>
    
<!-- Hier könnte die WiX-Systemvariable WIXNETFX4RELEASEINSTALLED abgefragt werden, die die
     aktuelle Versionsnummer von .NET Framework 4 enthält (z.B. 528040 für .NET Framework 4.8). 
     Dies erfordert einen Verweis auf NetFxExtension (siehe Zeile 10, Verweis muss aber auch
     in Visual Studio hinzugefügt werden - dort im Menüpunkt "Projekt - Verweis hinzufügen: 
     C:\Programme\WiX Toolset v3.11\bin\WixNetFxExtension.dll").
     Tatsächlich wird diese Systemvariable in diesem WiX-Skript nicht benutzt, denn sie kann
     nur Versionsnummern ab 4.5 enthalten. Es sollen aber auch niedrigere Versionsnummern
     angezeigt werden. Die Funktionalität wurde deshalb in eine CustomAction ausgelagert.
-->
    <PropertyRef Id="WIXNETFX4RELEASEINSTALLED"/>
    
<!-- Für die Prüfung auf .NET Core gibt es keine WiX-Systemvariable. Um dessen Existenz auf
     dem Zielrechner festzustellen wird eine CustomAction (also z.B. eine C#-Funktion innerhalb
     einer DLL) benötigt. Siehe auch Kommentare in "Product.wxs".
-->
    
<!-- Hier beginnt die Definition des Dialogfensters.
-->
    <UI Id="MeinFrameworkTestProgramm">
      
<!-- DialogRef-Elemente
     Hier stehen Verweise auf andere Dialogfenster (diese fünf sind Pflicht für alle MSI-Projekte).
     Sollte das WiX-Skript mehr als ein selbstdefiniertes Dialogfenster enthalten, müssen für diese
     ebenfalls an dieser Stelle Verweise stehen.
-->
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="UserExit" />
      <DialogRef Id="ExitDlg" />
      
<!-- Die Standard-Schriftart muss definiert und mindestens ein TextStyle muss festgelegt werden.
-->
      <Property Id="DefaultUIFont"
                Value="Tahoma_Regular" />
      
      <TextStyle Id="Tahoma_Regular"
                 FaceName="Tahoma"
                 Size="8" />

<!-- Hier werden die beiden Icons referenziert, die in diesem Dialogfenster angezeigt werden.
-->
      <Binary Id="GreenIcon"
              SourceFile="circle_green.ico" />
      
      <Binary Id="RedIcon"
              SourceFile="circle_red.ico" />
      
<!-- Definition des Dialogfensters mit allen Kontroll-Elementen
     (hier nur sechs Textfelder, vier Icons und ein OK-Schalter sowie neun GroupBox-
     Elemente, mit denen eine Tabelle gebaut wird - das WiX-Element "ListView" ist
     leider keine richtige Tabelle wie "ListViews" in C#, siehe unten).
-->
      <Dialog Id="FrameworkAnzeigeDialog"
              Width="350"
              Height="200"
              Title="Vorhandene Frameworks"
              NoMinimize="no">

<!-- Hier werden GroupBox-Elemente gezeichnet, um eine Tabelle zu "faken".
     ListView-Elemente gibt es zwar auch bei WiX, aber hier sind sie keine Tabellen
     wie z.B. in C#, sondern Listen, in denen jede Zeile nur ein Icon und einen
     Text enthalten kann. Es gibt auch Elemente, die wie ListViews in C# aussehen
     (wie z.B VolumeCostList), aber die sind spezialisiert (z.B. auf die Anzeige
     der Speicherkapazität von Laufwerken) und lassen sich nicht zweckentfremden.
     Eine Tabelle aus Linien zusammenzusetzen geht an dieser Stelle auch nicht,
     weil Linien in WiX nur horizontal sein können, aber nicht vertikal.
     Weil man bei GroupBox-Elementen keine Hintergrundfarbe einstellen kann,
     wird zunächst eine weiße Bitmap-Grafik als Hintergrundbild definiert,
     deren Größe exakt mit der Gesamtfläche der neun GroupBoxen übereinstimmt.
-->        
        <Control Id="TabellenHintergrund"        
                 Type="Bitmap"
                 Text="Hintergrund"
                 X="10" 
                 Y="15"
                 Height="45" 
                 Width="324" />    
        
        <Control Id="GroupBox1"        
                 Type="GroupBox"
                 X="10" 
                 Y="10"
                 Height="21" 
                 Width="24" />
        
        <Control Id="GroupBox2"        
                 Type="GroupBox"
                 X="34" 
                 Y="10"
                 Height="21" 
                 Width="150" />
        
        <Control Id="GroupBox3"        
                 Type="GroupBox"
                 X="184" 
                 Y="10"
                 Height="21" 
                 Width="150" />
        
        <Control Id="GroupBox4"        
                 Type="GroupBox"
                 X="10" 
                 Y="25"
                 Height="21" 
                 Width="24" />
        
        <Control Id="GroupBox5"        
                 Type="GroupBox"
                 X="34" 
                 Y="25"
                 Height="21" 
                 Width="150" />
        
        <Control Id="GroupBox6"        
                 Type="GroupBox"
                 X="184" 
                 Y="25"
                 Height="21" 
                 Width="150" />
        
        <Control Id="GroupBox7"        
                 Type="GroupBox"
                 X="10" 
                 Y="40"
                 Height="21" 
                 Width="24" />
        
        <Control Id="GroupBox8"        
                 Type="GroupBox"
                 X="34" 
                 Y="40"
                 Height="21" 
                 Width="150" />
        
        <Control Id="GroupBox9"        
                 Type="GroupBox"
                 X="184" 
                 Y="40"
                 Height="21" 
                 Width="150" />

<!-- Diese beiden Text-Elemente bilden die Überschriften der Tabellenspalten.
     Wichtig ist hier das Attribut 'Transparent="yes"'. Wenn es fehlt, steht der
     Text unsichtbar hinter dem weißen Hintergrund-Bitmap.
-->
        <Control Id="Tabellenkopf1"
                 Type="Text"
                 X="40"
                 Y="17"
                 Width="150"
                 Height="10"
                 Transparent="yes"
                 TabSkip="no"
                 Text="Vorhanden" />

        <Control Id="Tabellenkopf2"
                 Type="Text"
                 X="190"
                 Y="17"
                 Width="150"
                 Height="10"
                 Transparent="yes"
                 TabSkip="no"
                 Text="Erforderlich" />

<!-- Hier wird mit Hilfe von grünen und roten Icons angezeigt, ob die vorhandenen
     Versionen von .NET Framework und .NET Core für das zu installierende Programm
     ausreichen. Benötigt werden mindestens .NET Framework 4.8 und .NET Core 3.1.15.
     Die Prüfung erfolgt in der "FrameworkTestCustomAction2.dll", also in einer
     C#-Funktion, die die Ergebnisse in die Properties "DOTNETFRAMEWORK48" und
     "DOTNETCORE3115" schreibt, die vorher in "Product.wxs" definiert wurden.
     Für jedes Framework sind zwei Icons definiert, das unzutreffende wird mit der
     Action "hide" ausgeblendet. Umgekehrt funktionierte das nicht; es gibt zwar
     auch eine Action "show", aber diese ist voreingestellt.
-->      
        <Control Id="FrameworkGreen"
                 Type="Icon"
                 Text="GreenIcon"
                 X="17"
                 Y="32"
                 Width="10"
                 Height="10"
                 IconSize="16">
          
          <Condition Action="hide">
            <![CDATA[DOTNETFRAMEWORK48 = "0"]]>
          </Condition>
        </Control>

        <Control Id="FrameworkRed"
                 Type="Icon"
                 Text="RedIcon"
                 X="17"
                 Y="32"
                 Width="10"
                 Height="10"
                 IconSize="16">
          
          <Condition Action="hide">
            <![CDATA[DOTNETFRAMEWORK48 = "1"]]>
          </Condition>
        </Control>

        <Control Id="CoreGreen"
                 Type="Icon"
                 Text="GreenIcon"
                 X="17"
                 Y="47"
                 Width="10"
                 Height="10"
                 IconSize="16">
          
          <Condition Action="hide">
            <![CDATA[DOTNETCORE3115 = "0"]]>
          </Condition>
        </Control>

        <Control Id="CoreRed"
                 Type="Icon"
                 Text="RedIcon"
                 X="17"
                 Y="47"
                 Width="10"
                 Height="10"
                 IconSize="16">
          
          <Condition Action="hide">
            <![CDATA[DOTNETCORE3115 = "1"]]>
          </Condition>
        </Control>

<!-- Hier wird angezeigt, ob auf dem Zielrechner .NET Framework 4.8 (oder höher)
     installiert ist. Die Prüfung erfolgt in der "FrameworkTestCustomAction.dll",
     also in einer C#-Funktion, die das Ergebnis in die Property "DOTNETFRAMEWORKVORHANDEN"
     schreibt, die vorher in "Product.wxs" definiert wurde.
     Zur Erkennung des .NET Framework 4.8 gibt es auch eine einfachere Möglichkeit:
     die WiX-Systemvariable "WIXNETFX4RELEASEINSTALLED" (siehe unten).
-->
        <Control Id="Textfeld1"
                 Type="Text"
                 X="40"
                 Y="32"
                 Width="300"
                 Height="10"
                 Transparent="yes"
                 TabSkip="no"
                 Text="[DOTNETFRAMEWORKVORHANDEN]" />

        <Control Id="Textfeld2"
                 Type="Text"
                 X="190"
                 Y="32"
                 Width="300"
                 Height="10"
                 Transparent="yes"
                 TabSkip="no"
                 Text="[DOTNETFRAMEWORKERFORDERLICH]" />

<!-- Hier wird angezeigt, ob auf dem Zielrechner .NET Core 3.1.15 (oder höher)
     installiert ist. Die Prüfung erfolgt in der "FrameworkTestCustomAction.dll".
     also in einer C#-Funktion, die das Ergebnis in die Property "DOTNETCOREVORHANDEN"
     schreibt, die vorher in "Product.wxs" definiert wurde.
     Zur Erkennung von .NET Core gibt es keine WiX-Systemvariable.
-->
        <Control Id="Textfeld3"
                 Type="Text"
                 X="40"
                 Y="47"
                 Width="300"
                 Height="10"
                 Transparent="yes"
                 TabSkip="no"
                 Text="[DOTNETCOREVORHANDEN]" />
          
        <Control Id="Textfeld4"
                 Type="Text"
                 X="190"
                 Y="47"
                 Width="300"
                 Height="10"
                 Transparent="yes"
                 TabSkip="no"
                 Text="[DOTNETCOREERFORDERLICH]" />
          
<!-- Andere Möglichkeit zur Erkennung von .NET Framework 4.8:
          <Condition Action="hide">
            <![CDATA[WIXNETFX4RELEASEINSTALLED >= "#528040"]]>
          </Condition>
        </Control>
-->

<!-- Hier wird ein PushButton-Element definiert, der das Dialofenster schließt.
-->
        <Control Id="OkButton"
                 Type="PushButton"
                 Text="OK"
                 X="150"
                 Y="175"
                 Height="17"
                 Width="50">

          <Publish Event="EndDialog"
                   Value="Exit" />
        </Control>

      </Dialog>

    </UI>
    
<!-- InstallUISequence-Element
     An dieser Stelle wird das Installationsprogramm gestartet und das erste
     Dialogfenster angezeigt. Die Anzahl und Reihenfolge der weiteren Dialogfenster
     ergibt sich aus dem Inhalt der Publish-Elemente innerhalb der Control-Elemente.
-->
    <InstallUISequence>

      <Show Dialog="FrameworkAnzeigeDialog"
            Before="ExecuteAction" />

    </InstallUISequence>

  </Fragment>

</Wix>
